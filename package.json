{
  "name": "cvs-exercise",
  "version": "0.1.0",
  "description": "CVS Exercise",
  "keywords": [
    "sass",
    "bulma",
    "css",
    "cvs"
  ],
  "author": "CVS",
  "license": "MIT",
  "devDependencies": {
    "autoprefixer": "^7.1.5",
    "babel-cli": "^6.26.0",
    "babel-preset-env": "^1.6.0",
    "babel-preset-es2015-ie": "^6.7.0",
    "browser-sync": "^2.24.7",
    "bulma": "^0.6.0",
    "clean-css-cli": "^4.2.1",
    "cross-var": "^1.1.0",
    "mkdirp": "^0.5.1",
    "node-sass": "^4.5.3",
    "npm-run-all": "^4.1.3",
    "onchange": "^4.1.0",
    "postcss-cli": "^4.1.1",
    "rimraf": "^2.6.2",
    "uglify-js": "^3.4.9"
  },
  "scripts": {
    "//GENERAL": " --- GENERAL ---",
    "reinstall": "rimraf node_modules && npm cache clean && npm install",
    "start": "npm-run-all --parallel serve watch",

    "//CSS": " --- CSS --- ",
    "css:dev": "node-sass src/assets/_sass/main.scss --output-style expanded --source-map true dist/assets/css/main.css",
    "css:prod": "cross-var \"node-sass src/assets/_sass/main.scss --output-style compressed | postcss -u autoprefixer --map false -b 'last 2 versions' > dist/assets/css/main.css\"",

    "//JAVASCRIPT": " --- JAVASCRIPT --- ",
    "js:dev": "babel src/assets/_js | uglifyjs > dist/assets/js/main.js",
    "js:prod": "babel src/assets/_js | uglifyjs -m -c > dist/assets/js/main.js",
    "js:vendor": "uglifyjs src/assets/vendor/*.js > dist/assets/vendor/vendor.js",

    "//BUILD (GENERIC)": " --- BUILD (GENERIC) --- ",
    "clean": "rimraf dist",
    "mkdirs": "mkdirp dist/assets -p && mkdirp dist/assets/vendor -p && mkdirp dist/assets/js -p && mkdirp dist/assets/css -p && mkdirp dist/assets/images -p",
    "copy:assets": "cp -r src/assets/* dist/assets/",
    "copy:images": "cp -r src/assets/images/* dist/assets/images/",
    "copy:html": "cp src/index.html dist/",
    "copy": "npm-run-all --parallel copy:*",

    "//BUILD (DEVELOPMENT)": " --- BUILD (DEVELOPMENT) --- ",
    "prebuild:dev": "npm run clean && npm run mkdirs && npm run copy",
    "build:dev": "npm-run-all --parallel css:dev js:dev js:vendor",

    "//BUILD (PRODUCTION)": " --- BUILD (PRODUCTION) --- ",
    "prebuild:prod": "npm run clean && npm run mkdirs && npm run copy",
    "build:prod": "npm-run-all --parallel css:prod && npm run js:prod && npm run js:vendor",

    "//SERVING": " --- SERVING --- ",
    "pre-serve": "npm run build:dev",
    "serve": "browser-sync start -s \"dist\" --files \"./**/**\" --ss \"./**/**\" --port 3000 --reload-debounce 500",
    "serve2": "browser-sync start --server \"dist\" --files \"dist/assets/css/*.css, dist/assets/js/*.js, **/*.html, !node_modules/**/*.html\"",
    "serve3": "browser-sync start --config bs-config.js",
    "serve-help": "browser-sync start --help",

    "//WATCHING": " --- WATCHING --- ",
    "watch:assets": "onchange \"src/assets/**/*\" -- npm run copy:assets",
    "watch:images": "onchange \"src/assets/images/**/*\" -- npm run copy:images",
    "watch:vendor": "onchange \"src/assets/vendor/**/*.js\" -- npm run js:vendor",
    "watch:html": "onchange \"src/*.html\" -- npm run copy:html",
    "watch:css": "onchange \"src/assets/_sass/**/*.scss\" -- npm run css:dev",
    "watch:js": "onchange \"src/assets/_js/**/*.js\" -- npm run js:dev",
    "watch": "npm-run-all --parallel watch:css watch:js watch:html watch:images",

    "//DEPLOYMENT": " --- DEPLOYMENT --- ",
    "postversion": "git push && git push --tags",
    "predeploy": "npm run build:prod"

  }
}
